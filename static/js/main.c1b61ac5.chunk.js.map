{"version":3,"sources":["components/Tree.js","components/Sidebar.js","components/dataTable/Filter.js","components/dataTable/Search.js","actions/postActions.js","components/dataTable/UpDownArrow.js","components/dataTable/EditSaveBtn.js","components/dataTable/Table.js","components/Contacts.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Tree","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","setState","subtree","_this2","treeData","treeDepth","divstyle","marginLeft","color","arrowStyle","cursor","children","react_default","a","createElement","key","id","parentExpanded","length","map","child","style","onClick","bind","Link","to","name","className","Component","connect","Sidebar","components_Tree","Filter","renderAllFilters","filter","renderedFilter","_loop","i","isEmptyFilter","condition","push","field","input","removeFilter","Search","assertThisInitialized","document","getElementById","headerNames","value","filterInputValue","fieldValue","addFilter","filterObj","alert","newFilter","concat","toConsumableArray","filterData","dataName","disableInput","filterInput","disabled","objToDelete","splice","fieldNames","values","headerObj","options","role","aria-label","createFieldOptions","onChange","onConditionChange","type","onClickAddFilter","dataTable_Filter","Math","random","dispatch","UpDownArrow","isDown","isActive","onArrowClick","React","EditSaveBtn","editMode","Table","duplicateData","console","log","fieldKeys","renderedRows","data","modifiedState","newcontacts","keys","tds","j","onRowEdit","dataTable_EditSaveBtn","ref","rowEdit","onRowDelete","_this3","headers","headerKeys","ths","_loop2","dataTable_UpDownArrow","fieldArrow","headerKeyActive","_this4","forEach","headerKey","defaultDownArrow","sortByField","rowID","_this5","refEditSaveBtn","isEditMode","changedObject","nodeBeforeInput","Number","textContent","firstChild","trim","editData","reverseSaveEditMode","e","element","node","attType","createAttribute","attValue","setAttributeNode","appendChild","window","confirm","deleteData","addData","dataTable_Search","onClickAddBtn","createDataHeader","createDataRows","changedDataObj","objID","Contacts","dataTable_Table","contacts","App","BrowserRouter","components_Sidebar","Switch","Route","path","component","Boolean","location","hostname","match","initState","company","title","firstName","lastName","officePh","ext","cell","email","contactsKeyNames","rootReducer","arguments","undefined","action","_ret","sort","b","aa","bb","toUpperCase","compare","v","assign","dataToFilter","keyNames","find","toLowerCase","item","toString","includes","newData","keysArray","index","findIndex","obj","index2","newData2","newData3","newID","newObj","store","createStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1b61ac5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport '../styles/App.css'\r\n\r\nclass Tree extends Component {\r\n  constructor(props) {\r\n    super(props); //  not sure what this line does\r\n    this.state = {\r\n      expanded: true\r\n    };\r\n  }\r\n  onClick(){\r\n    this.setState({\r\n      expanded: !this.state.expanded\r\n    })\r\n  }\r\n  render() {\r\n    let treeData = this.props.treeData;\r\n    let treeDepth = this.props.treeDepth;\r\n    let subtree;\r\n    let divstyle = {\r\n      marginLeft: (treeDepth * 5) +'px',\r\n      color: 'black'\r\n    }\r\n    let arrowStyle= {\r\n      cursor: 'pointer'\r\n    }\r\n    let arrow = () =>{\r\n      if(this.state.expanded){\r\n        return(<span style = {arrowStyle} onClick ={this.onClick.bind(this)}>&#9662;</span>)        \r\n      }\r\n      else{\r\n        return(<span style = {arrowStyle} onClick ={this.onClick.bind(this)}>&#9656;</span>)   \r\n      }  \r\n    }\r\n\r\n    let recursiveMenuLogic = () =>{\r\n\r\n      if (typeof(treeData.children) === \"undefined\") {\r\n        return <Tree treeData={treeData[0]} key = {treeData[0].id} treeDepth ={treeDepth + 1} parentExpanded = {this.state.expanded} />;\r\n      }\r\n      \r\n      else if (treeData.children.length > 0 && this.props.parentExpanded) {\r\n        subtree = treeData.children.map(child => {\r\n          return <Tree treeData={child} key ={child.id} treeDepth ={treeDepth + 1} parentExpanded = {this.state.expanded}/>;       \r\n        });  \r\n        return(\r\n          <div style ={divstyle}>\r\n            {arrow()}            \r\n            <Link to= {\"/\"+treeData.name} className = 'linkStyle'>{treeData.name} </Link>          \r\n            {subtree}\r\n          </div>\r\n        )\r\n      }    \r\n\r\n      else if(treeData.children.length === 0  && this.props.parentExpanded) {\r\n        return <Link to= {\"/\"+treeData.name} className = 'linkStyle'><div style ={divstyle} onClick ={this.onClick.bind(this)}>{treeData.name}</div></Link>  ;\r\n      }\r\n\r\n      else{\r\n        return null\r\n      }\r\n    }\r\n\r\n    return (recursiveMenuLogic())    \r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    treeData: state.treeData,\r\n    treeDepth: state.treeDepth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Tree);\r\n","import React, {Component} from 'react'\r\nimport Tree from './Tree'\r\nimport '../styles/App.css'\r\n\r\nclass Sidebar extends Component{\r\n\r\n  render(){\r\n     return(\r\n       <div className = 'sidebar'>\r\n         <Tree />\r\n       </div>      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react';\r\nimport '../../styles/App.css'\r\n\r\nclass Filter extends Component{\r\n  renderAllFilters = () => {\r\n    let filter = this.props.filter\r\n    \r\n      let renderedFilter = []\r\n      for(let i = 0; i <= filter.length-1; i++){\r\n        let isEmptyFilter = (filter[i].condition === 'Is Not Empty' || filter[i].condition === 'Is Empty');\r\n          renderedFilter.push(\r\n            <span key = {i}>\r\n              <span className = 'filter' key = {i}>\r\n                <b>{filter[i].field}</b>\r\n                &nbsp;\r\n                <i>{filter[i].condition}</i>\r\n                &nbsp;\r\n                {!isEmptyFilter ? <q>{filter[i].input}</q>: null}\r\n                &nbsp;\r\n                <b className ='filterClose' onClick = {() => this.props.removeFilter(filter[i])}>&times;</b>\r\n              </span>\r\n              &nbsp;&nbsp;\r\n            </span>\r\n          )\r\n      }\r\n      return renderedFilter     \r\n  }\r\n  \r\n  render(){\r\n    return (this.props.filter.length > 0)?this.renderAllFilters():null\r\n  }\r\n}\r\nexport default Filter\r\n","import React, {Component} from 'react';\r\nimport '../../styles/App.css';\r\nimport {connect} from 'react-redux';\r\nimport Filter from './Filter'\r\nimport {filterData} from '../../actions/postActions'\r\n\r\n\r\nclass Search extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      filter: []\r\n    }\r\n\r\n    this.removeFilter = this.removeFilter.bind(this);\r\n  }\r\n\r\n  onClickAddFilter(){\r\n    let condition = document.getElementById(this.props.headerNames+' condition').value;\r\n    let filterInputValue = document.getElementById(this.props.headerNames+' filterInput').value;\r\n    let fieldValue = document.getElementById(this.props.headerNames).value;\r\n    let addFilter = true;\r\n\r\n    for(let i = 0; this.state.filter.length > i; i++){\r\n      let filterObj = this.state.filter[i]\r\n      if(filterObj.field === fieldValue && filterObj.condition === condition && filterObj.input === filterInputValue){\r\n        alert('that filter already exists');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n      else if((filterObj.field === fieldValue && this.state.filter.length > 0 && condition === 'Is Empty')||(filterObj.field === fieldValue && filterObj.condition === 'Is Empty')){\r\n        alert('Is Empty condition cannot be combined with any other conditions for the same field');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n      else if((filterObj.field === fieldValue && condition === 'Is Not Empty' && this.state.filter.length > 0 && (filterObj.condition === 'Contains'|| filterObj.condition === 'Not Contain'))){\r\n        alert('This filter will not change the outcome');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n      else if(filterObj.field === fieldValue && (condition === 'Contains' || condition === 'Not Contain')&& filterObj.input === filterInputValue && (filterObj.condition === 'Contains' || filterObj.condition === \"Not Contain\")){\r\n        alert('The exact opposite condition exists');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if((filterInputValue.length === 0 || filterInputValue === null) && (condition === 'Contains'|| condition === 'Not Contain')){\r\n      alert('Please input value you wish to filter');\r\n        addFilter = !addFilter;\r\n    }\r\n    \r\n    let newFilter = []\r\n    if(addFilter){\r\n      newFilter = [...this.state.filter, {field: fieldValue, condition: condition, input: filterInputValue}];\r\n      this.setState({\r\n        filter: newFilter\r\n      })\r\n    }\r\n    this.props.filterData(newFilter, this.props.dataName, false)    \r\n  }\r\n\r\n  onConditionChange(){           \r\n    let disableInput = false;\r\n    let condition = document.getElementById(this.props.headerNames+ ' condition').value;\r\n    let filterInput = document.getElementById(this.props.headerNames+' filterInput')\r\n    if((condition === 'Is Not Empty')||(condition === 'Is Empty')){\r\n      disableInput = true;\r\n      filterInput.value = '' \r\n      filterInput.disabled = disableInput; \r\n    }\r\n    else{\r\n      filterInput.disabled = disableInput; \r\n    }    \r\n  }\r\n\r\n  removeFilter(objToDelete){\r\n    let newFilter = this.state.filter\r\n    let i = 0\r\n    while(i <= newFilter.length-1){\r\n      if(newFilter[i].field === objToDelete.field && newFilter[i].condition === objToDelete.condition && newFilter[i].input === objToDelete.input){\r\n        newFilter.splice(i,1)\r\n        i -= 1        \r\n      }\r\n      i += 1\r\n    }    \r\n    this.setState({\r\n      filter: newFilter\r\n    })\r\n\r\n    this.props.filterData(newFilter, this.props.dataName, true)\r\n  }\r\n\r\n  createFieldOptions(){\r\n    let fieldNames =  Object.values(this.props.headerObj[0]);\r\n    let options = []\r\n    for(let i = 0; i <= fieldNames.length-1; i++){\r\n      options.push(<option value={fieldNames[i]} key = {i}>{fieldNames[i]}</option>)\r\n    }\r\n    return options;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className ='search'>\r\n        <div>\r\n          <span role ='img' aria-label='Search'>&#x1f50e;&nbsp;&nbsp;</span>\r\n          <select id = {this.props.headerNames}>\r\n            {this.createFieldOptions()}\r\n          </select>\r\n          \r\n          <select id ={this.props.headerNames+ ' condition'} onChange ={this.onConditionChange.bind(this)}>\r\n            <option value = 'Contains'>Contains</option>\r\n            <option value = 'Not Contain'>Not Contain</option>\r\n            <option value = 'Is Empty'>Is Empty</option>\r\n            <option value = 'Is Not Empty'>Is Not Empty</option>               \r\n          </select>\r\n          \r\n          <input type=\"text\" id= {this.props.headerNames+ ' filterInput'}></input>\r\n          <button onClick = {this.onClickAddFilter.bind(this)}>Add filter</button>\r\n        </div>\r\n        <div>\r\n          <Filter\r\n            filter = {this.state.filter}\r\n            removeFilter = {this.removeFilter}\r\n            key = {Math.random()}\r\n          />                                                             \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) =>{\r\n  return{\r\n    headerObj: state[props.headerNames]    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    filterData: (filter, dataName, removeFilter) => dispatch(filterData(filter, dataName, removeFilter))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","export const sortByField = (headerKeyActive, isDown, dataName) =>{\r\n  return{\r\n    type: 'SORT_BY_FIELD',\r\n    headerKeyActive,\r\n    isDown,\r\n    dataName\r\n  }\r\n}\r\n\r\nexport const duplicateData = (dataName) =>{\r\n  return{\r\n    type: 'DUPLICATE_DATA',\r\n    dataName\r\n  }\r\n}\r\n\r\nexport const filterData = (filter, dataName, removeFilter) =>{\r\n  return{\r\n    type: 'FILTER_DATA',\r\n    filter,\r\n    dataName,\r\n    removeFilter\r\n  }\r\n}\r\n\r\nexport const editData = (changedDataObj, dataName) => {\r\n  return{\r\n    type: 'EDIT_DATA',\r\n    changedDataObj,\r\n    dataName\r\n  }\r\n}\r\n\r\nexport const deleteData = (objID, dataName) => {\r\n  return{\r\n    type: 'DELETE_DATA',\r\n    objID,\r\n    dataName\r\n  }\r\n}\r\n\r\nexport const addData = (dataName) =>{\r\n  return{\r\n    type: 'ADD_DATA',\r\n    dataName\r\n  }\r\n}","import React from 'react'\r\nimport '../../styles/App.css'\r\n\r\nclass UpDownArrow extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      isDown: true,\r\n      arrowStyle: 'upDownArrow',\r\n      isActive: false      \r\n    }\r\n  }\r\n\r\n  onClick(){\r\n    this.setState({\r\n      isDown: !this.state.isDown,\r\n      arrowStyle: 'upDownArrowActive',\r\n      isActive: true\r\n    })\r\n    this.props.onArrowClick(this.props.id, this.state.isDown, this.props.dataName)\r\n  }\r\n\r\n  defaultDownArrow(){\r\n    this.setState({\r\n      isDown: true,\r\n      arrowStyle: 'upDownArrow',\r\n      isActive: false\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return this.state.isDown?\r\n    <span \r\n      onClick ={this.onClick.bind(this)} \r\n      className = {this.state.arrowStyle}>\r\n        &#x025BE;\r\n    </span>\r\n    :\r\n    <span \r\n      onClick ={this.onClick.bind(this)} \r\n      className = {this.state.arrowStyle}>\r\n        &#x025B4;\r\n    </span>\r\n  }\r\n}\r\nexport default UpDownArrow","import React from 'react'\r\n\r\nclass EditSaveBtn extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      editMode: false\r\n    }\r\n  }\r\n\r\n  isEditMode(){\r\n    return this.state.editMode\r\n  }\r\n\r\n  reverseSaveEditMode(){\r\n    this.setState({      \r\n      editMode: !this.state.editMode\r\n    })\r\n  }\r\n  render(){\r\n    return (this.state.editMode)?<span>&#x1f5ab;</span>:<span>&#x270E;</span>\r\n  }\r\n}\r\nexport default EditSaveBtn;","import React from \"react\";\r\nimport \"../../styles/App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Search from './Search';\r\nimport UpDownArrow from './UpDownArrow';\r\nimport EditSaveBtn from './EditSaveBtn'\r\nimport {sortByField, duplicateData, editData, deleteData, addData} from '../../actions/postActions'\r\n\r\nclass Table extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.onArrowClick =this.onArrowClick.bind(this)\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.props.duplicateData(this.props.dataName)\r\n  }\r\n\r\n  createDataRows(){\r\n    console.log('creating data rows')\r\n    let renderedRows = [];\r\n    let data = this.props.modifiedState.newcontacts;\r\n    let fieldKeys;\r\n    console.log(data)\r\n    if(data.length > 0){\r\n      fieldKeys = Object.keys(data[0]);\r\n    } \r\n    for(let i=0; i <= data.length -1; i++){\r\n      let tds =[]\r\n\r\n      tds.push(<td key={fieldKeys.length+3}><input type=\"checkbox\"/></td>)\r\n      \r\n      for(let j=0; j <= fieldKeys.length -1; j++){\r\n        tds.push(\r\n          <td \r\n            className ='tableCell'\r\n            id = {data[i].id+fieldKeys[j]+this.props.dataName}\r\n            key={j}\r\n            >{data[i][fieldKeys[j]]}</td>\r\n        )\r\n      }\r\n      tds.push(<td \r\n        className = 'rowDataEdit'\r\n        id= {data[i].id+' '+fieldKeys.length+'Edit'} \r\n        key= {fieldKeys.length}\r\n        onClick = {() => this.onRowEdit(data[i].id)}\r\n        >\t\r\n          <EditSaveBtn ref={(rowEdit) =>this[data[i].id+this.props.dataName+'Edit'] = rowEdit}/></td>)\r\n      tds.push(<td \r\n        className = 'rowDataDelete'\r\n        id= {data[i].id} \r\n        key= {fieldKeys.length+1}\r\n        onClick = {() => this.onRowDelete(data[i].id)}\r\n        > &#x1F5D1;</td>)\r\n      renderedRows.push(<tr key = {i}>{tds}</tr>)\r\n    }\r\n    return renderedRows;\r\n  }\r\n\r\n  createDataHeader(){\r\n    console.log('creating data header')\r\n    let headers = Object.values(this.props.headerObj[0]);\r\n    let headerKeys = Object.keys(this.props.headerObj[0]);\r\n    let ths =[];\r\n    ths.push(<th key = {headers.length}><input type=\"checkbox\"/></th>)\r\n    for(let i =0; i<= headers.length-1; i++){\r\n      ths.push(\r\n        <th className='tableCell' key = {i}>\r\n          {headers[i]}\r\n          <UpDownArrow\r\n            onArrowClick = {this.onArrowClick}\r\n            ref={(fieldArrow)=>this[headerKeys[i] + 'Arrow'] = fieldArrow}\r\n            id= {headerKeys[i]} \r\n          />\r\n        </th>\r\n      )\r\n    }\r\n    return ths;    \r\n  }\r\n\r\n  onArrowClick(headerKeyActive, isDown){\r\n    Object.keys(this.props.headerObj[0]).forEach(headerKey =>{\r\n      if(headerKey !== headerKeyActive){\r\n        this[headerKey + 'Arrow'].defaultDownArrow()\r\n      }\r\n    })\r\n    this.props.sortByField(headerKeyActive, isDown, this.props.dataName)\r\n  }\r\n  \r\n  onRowEdit(rowID){\r\n    let refEditSaveBtn = this[rowID+this.props.dataName+'Edit']\r\n    if(!refEditSaveBtn.isEditMode()){\r\n      let fieldKeys = Object.keys(this.props.headerObj[0]).filter(e => e !== 'id')\r\n      fieldKeys.forEach(element=>{\r\n        let textContent = (document.getElementById(rowID+element+this.props.dataName).textContent)\r\n        let node = document.createElement(\"INPUT\")\r\n        let attType = document.createAttribute(\"type\")\r\n        let attValue = document.createAttribute('value')\r\n        attType.value = 'text'\r\n        attValue.value = textContent\r\n        node.setAttributeNode(attType)\r\n        node.setAttributeNode(attValue)\r\n        document.getElementById(rowID+element+this.props.dataName).textContent = ''\r\n        document.getElementById(rowID+element+this.props.dataName).appendChild(node)\r\n      })\r\n      refEditSaveBtn.reverseSaveEditMode()      \r\n    }\r\n    else{\r\n      let fieldKeys = Object.keys(this.props.headerObj[0])\r\n      let changedObject = {};\r\n      fieldKeys.forEach(key=>{\r\n        let nodeBeforeInput = document.getElementById(rowID+key+this.props.dataName)\r\n        changedObject[key] = (key === 'id')?\r\n        Number(nodeBeforeInput.textContent)\r\n        :\r\n        nodeBeforeInput.firstChild.value.trim()\r\n        \r\n        if(key !== 'id'){\r\n          nodeBeforeInput.textContent = (nodeBeforeInput.firstChild.value)? nodeBeforeInput.firstChild.value.trim():nodeBeforeInput.firstChild.value\r\n        }\r\n      })\r\n      this.props.editData(changedObject, this.props.dataName)\r\n      refEditSaveBtn.reverseSaveEditMode()   \r\n    }   \r\n  }\r\n  onRowDelete(rowID){\r\n    if(window.confirm('Are you sure you want to delete this data? ID: ' + rowID)){\r\n      this.props.deleteData(rowID, this.props.dataName)\r\n    }    \r\n  }\r\n  onClickAddBtn(){\r\n    this.props.addData(this.props.dataName)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search headerNames = {this.props.headerNames} dataName = {this.props.dataName}/>\r\n        <div><button onClick = {this.onClickAddBtn.bind(this)}>Add</button></div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {this.createDataHeader()}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createDataRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    headerObj: state[props.headerNames],\r\n    modifiedState: state\r\n    /* duplicatedData: state['new' + props.dataName],\r\n    duplicatedData2: state['newcontacts'],  Need to understand why these won't work*/\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    sortByField: (headerKeyActive,isDown, dataName) => dispatch(sortByField(headerKeyActive, isDown, dataName)),\r\n    duplicateData: (dataName) => dispatch(duplicateData(dataName)),\r\n    editData: (changedDataObj, dataName) => dispatch(editData(changedDataObj, dataName)),\r\n    deleteData: (rowID, dataName) => dispatch(deleteData(rowID, dataName)),\r\n    addData: (dataName) => dispatch(addData(dataName))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","import React, {Component} from 'react';\r\nimport '../styles/App.css';\r\nimport {connect} from 'react-redux';\r\nimport Table from './dataTable/Table';\r\n\r\nclass Contacts extends Component{\r\n\r\n  render(){\r\n     return(\r\n       <div className ='contacts'>\r\n         <Table dataName = {'contacts'} headerNames = {'contactsKeyNames'}/>\r\n       </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst getContacts = state =>{\r\n  return {\r\n    contacts: state.contacts\r\n  };\r\n}\r\n\r\nexport default connect(getContacts)(Contacts);","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport './styles/App.css'\nimport Contacts from './components/Contacts'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Sidebar/> \n          <Switch>\n            <Route path='/contacts' component={Contacts}/>     \n          </Switch> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  treeData: [\r\n    {\r\n      id: 1,\r\n      name: \"Contacts\",\r\n      children: []\r\n    }\r\n  ],\r\n\r\n  treeDepth: 0,\r\n\r\n  contacts: [\r\n    {\r\n      id: 1,\r\n      company: \"Rapid Precision Mfg.\",\r\n      title: \"Quality Engineer\",\r\n      firstName: \"Dongyob\",\r\n      lastName: \"Lee\",\r\n      officePh: \"\",\r\n      ext: \"\",\r\n      cell: \"669-294-0910\",\r\n      email: \"dyl4810@gmail.com\"\r\n    },\r\n    {\r\n      id: 2,\r\n      company: \"Facebook\",\r\n      title: \"Frontend Developer\",\r\n      firstName: \"Edward\",\r\n      lastName: \"Simmons\",\r\n      officePh: \"408-516-4662\",\r\n      ext: \"003\",\r\n      cell: \"669-252-4251\",\r\n      email: \"edwardsimmons@gmail.com\"\r\n    },\r\n    {\r\n      id: 3,\r\n      company: \"Amazon\",\r\n      title: \"Data Scientist\",\r\n      firstName: \"Harry\",\r\n      lastName: \"Davis\",\r\n      officePh: \"\",\r\n      ext: \"\",\r\n      cell: \"408-344-2110\",\r\n      email: \"harrydavis0@gmail.com\"\r\n    },\r\n    {\r\n      id: 4,\r\n      company: \"Google\",\r\n      title: \"Googler\",\r\n      firstName: \"Katherine\",\r\n      lastName: \"Jones\",\r\n      officePh: \"408-963-7156\",\r\n      ext: \"846\",\r\n      cell: \"408-828-0550\",\r\n      email: \"katherinejones0@gmail.com\"\r\n    },\r\n    {\r\n      id: 5,\r\n      company: \"Alibaba\",\r\n      title: \"Scammer\",\r\n      firstName: \"Eric\",\r\n      lastName: \"Brown\",\r\n      officePh: \"510-663-5552\",\r\n      ext: \"462\",\r\n      cell: \"408-644-0110\",\r\n      email: \"ericbrown@gmail.com\"\r\n    }\r\n  ],\r\n  contactsKeyNames: [\r\n    {\r\n      id: \"ID\",\r\n      company: \"Company\",\r\n      title: \"Title\",\r\n      firstName: \"First Name\",\r\n      lastName: \"Last Name\",\r\n      officePh: \"Office\",\r\n      ext: \"Ext\",\r\n      cell: \"Cell\",\r\n      email: \"Email\"\r\n    }\r\n  ],\r\n  newcontacts: []\r\n};\r\nconst rootReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n\r\n    case 'SORT_BY_FIELD':\r\n      let compare = (a,b) =>{\r\n        let aa = a[action.headerKeyActive]\r\n        let bb = b[action.headerKeyActive]\r\n        if(typeof(a[action.headerKeyActive])==='string'){\r\n          aa = aa.toUpperCase();\r\n          bb = bb.toUpperCase();\r\n        }        \r\n        if(action.isDown){\r\n          return((aa>bb)?1:-1)      \r\n        }\r\n        else{\r\n          return((aa<bb)?1:-1)   \r\n        }        \r\n      }\r\n      const newcontacts = state.newcontacts.sort((a,b)=>compare(a,b));\r\n      return Object.assign({}, state, {newcontacts});\r\n\r\n    case 'FILTER_DATA':\r\n      let dataToFilter;\r\n      if(action.removeFilter){\r\n        dataToFilter = state[action.dataName]\r\n      }\r\n      else{\r\n        dataToFilter = state['new'+action.dataName]\r\n      }      \r\n      let keyNames = state[action.dataName + 'KeyNames'] \r\n      \r\n      for(let i=0; i <= action.filter.length - 1; i++){\r\n        let fieldValue = action.filter[i].field;\r\n        let field = Object.keys(keyNames[0]).find(key => keyNames[0][key] === fieldValue)\r\n        let condition = action.filter[i].condition;\r\n        let input = action.filter[i].input.toLowerCase();\r\n\r\n        if(condition === 'Contains'){\r\n          dataToFilter = dataToFilter.filter(item => item[field].toString().toLowerCase().includes(input))          \r\n        }        \r\n        else if(condition === 'Not Contain'){\r\n          dataToFilter = dataToFilter.filter(item => !item[field].toString().toLowerCase().includes(input));\r\n        }\r\n        else if(condition === 'Is Empty'){\r\n          dataToFilter = dataToFilter.filter(item => !item[field]);\r\n        }\r\n        else if(condition === 'Is Not Empty'){\r\n          dataToFilter = dataToFilter.filter(item => item[field]);\r\n        }\r\n      }\r\n      return Object.assign({}, state, {newcontacts: dataToFilter});\r\n\r\n    case 'DUPLICATE_DATA':\r\n      Object.assign(state.newcontacts, state.contacts);\r\n      return state\r\n\r\n    case 'EDIT_DATA':      \r\n      let newData = state\r\n      let keysArray = Object.keys(state[action.dataName+'KeyNames'][0])      \r\n      let index = newData[action.dataName].findIndex(obj => obj.id === action.changedDataObj.id)\r\n      let index2 = newData['new' + action.dataName].findIndex(obj => obj.id === action.changedDataObj.id)\r\n      \r\n      keysArray.forEach(key =>{\r\n        console.log(action.changedDataObj[key])\r\n        newData[action.dataName][index][key] = action.changedDataObj[key]\r\n        newData['new' + action.dataName][index2][key] = action.changedDataObj[key]\r\n      })      \r\n      return Object.assign({}, newData)      \r\n    \r\n    case 'DELETE_DATA':\r\n      let newData2 = state\r\n      newData2['new'+ action.dataName] = newData2['new'+ action.dataName].filter(obj => obj.id !== action.objID)\r\n      newData2[action.dataName]= newData2[action.dataName].filter(obj => obj.id !== action.objID)\r\n      return Object.assign({}, newData2)\r\n    \r\n    case 'ADD_DATA':\r\n      let newData3 = state\r\n      let keys = Object.keys(newData3[action.dataName + 'KeyNames'][0])\r\n      let newID = 0;\r\n      let newObj = {};\r\n      keys.forEach(key => {\r\n        if(key !== 'id'){\r\n          newObj[key] = null\r\n        }         \r\n      })\r\n      newData3[action.dataName].forEach(obj => {\r\n        if(obj.id > newID){\r\n          newID = obj.id\r\n        }\r\n      })\r\n      newObj.id = newID + 1\r\n\r\n      newData3[action.dataName] = [...newData3[action.dataName], newObj]\r\n      newData3['new'+action.dataName] = [newObj, ...newData3['new'+action.dataName]]\r\n      \r\n      console.log(newData3[action.dataName])\r\n      return Object.assign({},newData3)  \r\n      \r\n    default:\r\n      return state;\r\n  }   \r\n};\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}