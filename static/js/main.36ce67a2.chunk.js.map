{"version":3,"sources":["components/Tree.js","components/Sidebar.js","components/dataTable/Filter.js","components/dataTable/Search.js","components/dataTable/UpDownArrow.js","components/dataTable/Table.js","actions/postActions.js","components/Contacts.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Tree","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","setState","subtree","_this2","treeData","treeDepth","divstyle","marginLeft","color","arrowStyle","cursor","children","react_default","a","createElement","key","id","parentExpanded","length","map","child","style","onClick","bind","Link","to","name","className","Component","connect","Sidebar","components_Tree","Filter","renderAllFilters","filter","renderedFilter","_loop","i","isEmptyFilter","condition","push","field","input","removeFilter","Search","assertThisInitialized","document","getElementById","headerNames","value","filterInputValue","fieldValue","addFilter","filterObj","alert","newFilter","concat","toConsumableArray","disableInput","filterInput","disabled","objToDelete","splice","fieldNames","values","headerObj","options","role","aria-label","createFieldOptions","onChange","onConditionChange","type","onClickAddFilter","dataTable_Filter","Math","random","UpDownArrow","IsDown","isActive","onArrowClick","React","Table","duplicateData","dataName","console","log","duplicatedData","renderedRows","data","fieldKeys","keys","tds","j","headers","headerKeys","ths","dataTable_UpDownArrow","ref","fieldArrow","headerKeyActive","_this3","forEach","headerKey","defaultDownArrow","sortByField","dataTable_Search","createDataHeader","createDataRows","dispatch","Contacts","dataTable_Table","contacts","App","BrowserRouter","components_Sidebar","Switch","Route","path","component","Boolean","window","location","hostname","match","initState","company","title","firstName","lastName","officePh","ext","cell","email","contactsKeyNames","newcontacts","rootReducer","arguments","undefined","newState","store","createStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36ce67a2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport '../styles/App.css'\r\n\r\nclass Tree extends Component {\r\n  constructor(props) {\r\n    super(props); //  not sure what this line does\r\n    this.state = {\r\n      expanded: true\r\n    };\r\n  }\r\n  onClick(){\r\n    this.setState({\r\n      expanded: !this.state.expanded\r\n    })\r\n  }\r\n  render() {\r\n    let treeData = this.props.treeData;\r\n    let treeDepth = this.props.treeDepth;\r\n    let subtree;\r\n    let divstyle = {\r\n      marginLeft: (treeDepth * 5) +'px',\r\n      color: 'black'\r\n    }\r\n    let arrowStyle= {\r\n      cursor: 'pointer'\r\n    }\r\n    let arrow = () =>{\r\n      if(this.state.expanded){\r\n        return(<span style = {arrowStyle} onClick ={this.onClick.bind(this)}>&#9662;</span>)        \r\n      }\r\n      else{\r\n        return(<span style = {arrowStyle} onClick ={this.onClick.bind(this)}>&#9656;</span>)   \r\n      }  \r\n    }\r\n\r\n    let recursiveMenuLogic = () =>{\r\n\r\n      if (typeof(treeData.children) === \"undefined\") {\r\n        return <Tree treeData={treeData[0]} key = {treeData[0].id} treeDepth ={treeDepth + 1} parentExpanded = {this.state.expanded} />;\r\n      }\r\n      \r\n      else if (treeData.children.length > 0 && this.props.parentExpanded) {\r\n        subtree = treeData.children.map(child => {\r\n          return <Tree treeData={child} key ={child.id} treeDepth ={treeDepth + 1} parentExpanded = {this.state.expanded}/>;       \r\n        });  \r\n        return(\r\n          <div style ={divstyle}>\r\n            {arrow()}            \r\n            <Link to= {\"/\"+treeData.name} className = 'linkStyle'>{treeData.name} </Link>          \r\n            {subtree}\r\n          </div>\r\n        )\r\n      }    \r\n\r\n      else if(treeData.children.length === 0  && this.props.parentExpanded) {\r\n        return <Link to= {\"/\"+treeData.name} className = 'linkStyle'><div style ={divstyle} onClick ={this.onClick.bind(this)}>{treeData.name}</div></Link>  ;\r\n      }\r\n\r\n      else{\r\n        return null\r\n      }\r\n    }\r\n\r\n    return (recursiveMenuLogic())    \r\n  }\r\n}\r\nconst getTreeData = state => {\r\n  return {\r\n    treeData: state.treeData,\r\n    treeDepth: state.treeDepth\r\n  };\r\n};\r\n\r\nexport default connect(getTreeData)(Tree);\r\n","import React, {Component} from 'react'\r\nimport Tree from './Tree'\r\nimport '../styles/App.css'\r\n\r\nclass Sidebar extends Component{\r\n\r\n  render(){\r\n     return(\r\n       <div className = 'sidebar'>\r\n         <Tree />\r\n       </div>      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react';\r\nimport '../../styles/App.css'\r\n\r\nclass Filter extends Component{\r\n  renderAllFilters = () => {\r\n    let filter = this.props.filter\r\n    \r\n      let renderedFilter = []\r\n      for(let i = 0; i <= filter.length-1; i++){\r\n        let isEmptyFilter = (filter[i].condition === 'Is Not Empty' || filter[i].condition === 'Is Empty');\r\n          renderedFilter.push(\r\n            <span key = {i}>\r\n              <span className = 'filter' key = {i}>\r\n                <b>{filter[i].field}</b>\r\n                &nbsp;\r\n                <i>{filter[i].condition}</i>\r\n                &nbsp;\r\n                {!isEmptyFilter ? <q>{filter[i].input}</q>: null}\r\n                &nbsp;\r\n                <b className ='filterClose' onClick = {() => this.props.removeFilter(filter[i])}>&times;</b>\r\n              </span>\r\n              &nbsp;&nbsp;\r\n            </span>\r\n          )\r\n      }\r\n      return renderedFilter     \r\n  }\r\n  \r\n  render(){\r\n    return (this.props.filter.length > 0)?this.renderAllFilters():null\r\n  }\r\n}\r\nexport default Filter\r\n","import React, {Component} from 'react';\r\nimport '../../styles/App.css';\r\nimport {connect} from 'react-redux';\r\nimport Filter from './Filter'\r\n\r\n\r\nclass Search extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      filter: []\r\n    }\r\n\r\n    this.removeFilter = this.removeFilter.bind(this);\r\n  }\r\n\r\n  onClickAddFilter(){\r\n    let condition = document.getElementById(this.props.headerNames+' condition').value;\r\n    let filterInputValue = document.getElementById(this.props.headerNames+' filterInput').value;\r\n    let fieldValue = document.getElementById(this.props.headerNames).value;\r\n    let addFilter = true;\r\n\r\n    for(let i = 0; this.state.filter.length > i; i++){\r\n      let filterObj = this.state.filter[i]\r\n      if(filterObj.field === fieldValue && filterObj.condition === condition && filterObj.input === filterInputValue){\r\n        alert('that filter already exists');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n      else if((filterObj.field === fieldValue && this.state.filter.length > 0 && condition === 'Is Empty')||(filterObj.field === fieldValue && filterObj.condition === 'Is Empty')){\r\n        alert('Is Empty condition cannot be combined with any other conditions for the same field');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n      else if((filterObj.field === fieldValue && condition === 'Is Not Empty' && this.state.filter.length > 0 && (filterObj.condition === 'Contains'|| filterObj.condition === 'Not Contain'))){\r\n        alert('This filter will not change the outcome');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n      else if(filterObj.field === fieldValue && (condition === 'Contains' || condition === 'Not Contain')&& filterObj.input === filterInputValue && (filterObj.condition === 'Contains' || filterObj.condition === \"Not Contain\")){\r\n        alert('The exact opposite condition exists');\r\n        addFilter = !addFilter;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if((filterInputValue.length === 0 || filterInputValue === null) && (condition === 'Contains'|| condition === 'Not Contain')){\r\n      alert('Please input value you wish to filter');\r\n        addFilter = !addFilter;\r\n    }    \r\n\r\n    if(addFilter){\r\n      let newFilter = [...this.state.filter, {field: fieldValue, condition: condition, input: filterInputValue}];\r\n      this.setState({\r\n        filter: newFilter\r\n      })\r\n    }    \r\n  }\r\n\r\n  onConditionChange(){           \r\n    let disableInput = false;\r\n    let condition = document.getElementById(this.props.headerNames+ ' condition').value;\r\n    let filterInput = document.getElementById(this.props.headerNames+' filterInput')\r\n    if((condition === 'Is Not Empty')||(condition === 'Is Empty')){\r\n      disableInput = true;\r\n      filterInput.value = '' \r\n      filterInput.disabled = disableInput; \r\n    }\r\n    else{\r\n      filterInput.disabled = disableInput; \r\n    }    \r\n  }\r\n\r\n  removeFilter(objToDelete){\r\n    let newFilter = this.state.filter\r\n    let i = 0\r\n    while(i <= newFilter.length-1){\r\n      if(newFilter[i].field === objToDelete.field && newFilter[i].condition === objToDelete.condition && newFilter[i].input === objToDelete.input){\r\n        newFilter.splice(i,1)\r\n        i -= 1        \r\n      }\r\n      i += 1\r\n    }    \r\n    this.setState({\r\n      filter: newFilter\r\n    })\r\n  }\r\n\r\n  createFieldOptions(){\r\n    let fieldNames =  Object.values(this.props.headerObj[0]);\r\n    let options = []\r\n    for(let i = 0; i <= fieldNames.length-1; i++){\r\n      options.push(<option value={fieldNames[i]} key = {i}>{fieldNames[i]}</option>)\r\n    }\r\n    return options;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className ='search'>\r\n        <div>\r\n          <span role ='img' aria-label='Search'>&#x1f50e;&nbsp;&nbsp;</span>\r\n          <select id = {this.props.headerNames}>\r\n            {this.createFieldOptions()}\r\n          </select>\r\n          \r\n          <select id ={this.props.headerNames+ ' condition'} onChange ={this.onConditionChange.bind(this)}>\r\n            <option value = 'Contains'>Contains</option>\r\n            <option value = 'Not Contain'>Not Contain</option>\r\n            <option value = 'Is Empty'>Is Empty</option>\r\n            <option value = 'Is Not Empty'>Is Not Empty</option>               \r\n          </select>\r\n          \r\n          <input type=\"text\" id= {this.props.headerNames+ ' filterInput'}></input>\r\n          <button onClick = {this.onClickAddFilter.bind(this)}>Add filter</button>\r\n        </div>\r\n        <div>\r\n          <Filter\r\n            filter = {this.state.filter}\r\n            removeFilter = {this.removeFilter}\r\n            key = {Math.random()}\r\n          />                                                             \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst getHeaderKeys = (state, props) =>{\r\n  return{\r\n    headerObj: state[props.headerNames]    \r\n  }\r\n}\r\n\r\nexport default connect(getHeaderKeys)(Search);","import React from 'react'\r\nimport '../../styles/App.css'\r\n\r\nclass UpDownArrow extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      IsDown: true,\r\n      arrowStyle: 'upDownArrow',\r\n      isActive: false      \r\n    }\r\n  }\r\n\r\n  onClick(){\r\n    this.setState({\r\n      IsDown: !this.state.IsDown,\r\n      arrowStyle: 'upDownArrowActive',\r\n      isActive: true\r\n    })\r\n    this.props.onArrowClick(this.props.id)\r\n  }\r\n\r\n  defaultDownArrow(){\r\n    this.setState({\r\n      IsDown: true,\r\n      arrowStyle: 'upDownArrow',\r\n      isActive: false\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return this.state.IsDown?\r\n    <span \r\n      onClick ={this.onClick.bind(this)} \r\n      className = {this.state.arrowStyle}>\r\n        &#x025BE;\r\n    </span>\r\n    :\r\n    <span \r\n      onClick ={this.onClick.bind(this)} \r\n      className = {this.state.arrowStyle}>\r\n        &#x025B4;\r\n    </span>\r\n  }\r\n}\r\nexport default UpDownArrow","import React from \"react\";\r\nimport \"../../styles/App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Search from './Search';\r\nimport UpDownArrow from './UpDownArrow';\r\nimport {sortByField, duplicateData} from '../../actions/postActions'\r\n\r\nclass Table extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.onArrowClick =this.onArrowClick.bind(this)\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.props.duplicateData(this.props.dataName)\r\n    console.log('Redux state passed onto Table component after completion of duplicateData action:')\r\n    console.log(this.props.duplicatedData)\r\n  }\r\n\r\n  createDataRows(){\r\n    console.log('creating data rows')\r\n    let renderedRows = [];\r\n    let data = this.props.data;\r\n    let fieldKeys = Object.keys(data[0]);\r\n \r\n    for(let i=0; i <= data.length -1; i++){\r\n      let tds =[]\r\n      for(let j=0; j <= fieldKeys.length -1; j++){\r\n        tds.push(<td className ='tableCell' key={j}>{data[i][fieldKeys[j]]}</td>)\r\n      }\r\n      renderedRows.push(<tr key = {i}>{tds}</tr>)\r\n    }\r\n    return renderedRows;\r\n  }\r\n\r\n  createDataHeader(){\r\n    console.log('creating data header')\r\n    let headers = Object.values(this.props.headerObj[0]);\r\n    let headerKeys = Object.keys(this.props.headerObj[0]);\r\n    let ths =[];\r\n    for(let i =0; i<= headers.length-1; i++){\r\n      ths.push(\r\n        <th className='tableCell' key = {i}>\r\n          {headers[i]}\r\n          <UpDownArrow\r\n            onArrowClick = {this.onArrowClick}\r\n            ref={(fieldArrow)=>this[headerKeys[i] + 'Arrow'] = fieldArrow}\r\n            id= {headerKeys[i]} \r\n          />\r\n        </th>\r\n      )\r\n    }\r\n    return ths;    \r\n  }\r\n\r\n  onArrowClick(headerKeyActive){\r\n    Object.keys(this.props.headerObj[0]).forEach(headerKey =>{\r\n      if(headerKey !== headerKeyActive){\r\n        this[headerKey + 'Arrow'].defaultDownArrow()\r\n      }\r\n    })\r\n    this.props.sortByField(headerKeyActive, this.props.dataName)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search headerNames = {this.props.headerNames}/>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {this.createDataHeader()}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createDataRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    headerObj: state[props.headerNames],\r\n    data: state[props.dataName],\r\n    duplicatedData: state['new' + props.dataName]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    sortByField: (headerKeyActive, dataName) => dispatch(sortByField(headerKeyActive, dataName)),\r\n    duplicateData: (dataName) => dispatch(duplicateData(dataName))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","export const sortByField = (headerKeyActive, dataName) =>{\r\n  return{\r\n    type: 'SORT_BY_FIELD',\r\n    headerKeyActive,\r\n    dataName\r\n  }\r\n}\r\n\r\nexport const duplicateData = (dataName) =>{\r\n  return{\r\n    type: 'DUPLICATE_DATA',\r\n    dataName\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport '../styles/App.css';\r\nimport {connect} from 'react-redux';\r\nimport Table from './dataTable/Table';\r\n\r\nclass Contacts extends Component{\r\n\r\n  render(){\r\n     return(\r\n       <div className ='contacts'>\r\n         <Table dataName = {'contacts'} headerNames = {'contactsKeyNames'}/>\r\n       </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst getContacts = state =>{\r\n  return {\r\n    contacts: state.contacts\r\n  };\r\n}\r\n\r\nexport default connect(getContacts)(Contacts);","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport './styles/App.css'\nimport Contacts from './components/Contacts'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Sidebar/> \n          <Switch>\n            <Route path='/contacts' component={Contacts}/>     \n          </Switch> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  treeData: [\r\n    {\r\n      id: 1,\r\n      name: \"Contacts\",\r\n      children: []\r\n    }\r\n  ],\r\n\r\n  treeDepth: 0,\r\n\r\n  contacts: [\r\n    {\r\n      id: 1,\r\n      company: \"Rapid Precision Mfg.\",\r\n      title: \"Quality Engineer\",\r\n      firstName: \"Dongyob\",\r\n      lastName: \"Lee\",\r\n      officePh: \"\",\r\n      ext: \"\",\r\n      cell: \"669-294-0910\",\r\n      email: \"dyl4810@gmail.com\"\r\n    }\r\n  ],\r\n  contactsKeyNames: [\r\n    {\r\n      id: \"ID\",\r\n      company: \"Company\",\r\n      title: \"Title\",\r\n      firstName: \"First Name\",\r\n      lastName: \"Last Name\",\r\n      officePh: \"Office\",\r\n      ext: \"Ext\",\r\n      cell: \"Cell\",\r\n      email: \"Email\"\r\n    }\r\n  ],\r\n  newcontacts: []\r\n};\r\nconst rootReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'SORT_BY_FIELD':\r\n      break;\r\n\r\n    case 'DUPLICATE_DATA':\r\n      let newState = state;\r\n      newState.newcontacts = newState.contacts;\r\n      state = newState;\r\n      console.log('modified redux state inside of redux action DUPLICATE_DATA:')\r\n      console.log(state.newcontacts)\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }   \r\n  return state;\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}